#!/bin/bash

WAYBAR_CONFIG_DIR="$HOME/.config/waybar"
THEMES_DIR="$WAYBAR_CONFIG_DIR/themes"
CONFIG_FILE="config.jsonc"
STYLE_FILE="style.css"

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() {
	echo -e "${GREEN}[INFO]${NC} $1"
}

print_error() {
	echo -e "${RED}[ERROR]${NC} $1"
}

print_warning() {
	echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_theme() {
	echo -e "${BLUE}  →${NC} $1"
}

backup_current_theme() {
	local backup_affix
	backup_affix=".bak"

	if [[ -f "$WAYBAR_CONFIG_DIR/$CONFIG_FILE" ]] || [[ -f "$WAYBAR_CONFIG_DIR/$STYLE_FILE" ]]; then
		print_status "Creating backup of current theme located at ${WAYBAR_CONFIG_DIR}"

		[[ -f "$WAYBAR_CONFIG_DIR/$CONFIG_FILE" ]] && cp "$WAYBAR_CONFIG_DIR/$CONFIG_FILE" "$WAYBAR_CONFIG_DIR/$CONFIG_FILE${backup_affix}"
		[[ -f "$WAYBAR_CONFIG_DIR/$STYLE_FILE" ]] && cp "$WAYBAR_CONFIG_DIR/$STYLE_FILE" "$WAYBAR_CONFIG_DIR/$STYLE_FILE${backup_affix}"

		print_status "Current theme backed up successfully"
	fi
}

list_themes() {
	print_status "Available themes:"

	if [[ ! -d "$THEMES_DIR" ]]; then
		print_error "Themes directory not found: $THEMES_DIR"
		return 1
	fi

	local theme_count=0
	for theme_dir in "$THEMES_DIR"/*/; do
		if [[ -d "$theme_dir" ]]; then
			local theme_name
			theme_name=$(basename "$theme_dir")
			local has_config=false
			local has_style=false
			[[ -f "$theme_dir$CONFIG_FILE" ]] && has_config=true
			[[ -f "$theme_dir$STYLE_FILE" ]] && has_style=true

			if $has_config || $has_style; then
				print_theme "$theme_name"
				[[ $has_config == true ]] && echo "    ✓ $CONFIG_FILE"
				[[ $has_style == true ]] && echo "    ✓ $STYLE_FILE"
				((theme_count++))
			else
				print_warning "Theme '$theme_name' has no valid config files"
			fi
		fi
	done

	if [[ $theme_count -eq 0 ]]; then
		print_error "No valid themes found in $THEMES_DIR"
		return 1
	fi

	return 0
}

apply_theme() {
	local theme_name="$1"
	local theme_path="$THEMES_DIR/$theme_name"

	if [[ ! -d "$theme_path" ]]; then
		print_error "Theme directory not found: $theme_path"
		return 1
	fi

	local theme_config="$theme_path/$CONFIG_FILE"
	local theme_style="$theme_path/$STYLE_FILE"

	# Check if at least one file exists
	if [[ ! -f "$theme_config" ]] && [[ ! -f "$theme_style" ]]; then
		print_error "No theme files found in $theme_path"
		print_error "Expected: $CONFIG_FILE and/or $STYLE_FILE"
		return 1
	fi

	backup_current_theme

	print_status "Applying theme: $theme_name"

	if [[ -f "$theme_config" ]]; then
		cp "$theme_config" "$WAYBAR_CONFIG_DIR/"
		print_status "Copied $CONFIG_FILE"
	else
		print_warning "$CONFIG_FILE not found in theme, skipping"
	fi

	if [[ -f "$theme_style" ]]; then
		cp "$theme_style" "$WAYBAR_CONFIG_DIR/"
		print_status "Copied $STYLE_FILE"
	else
		print_warning "$STYLE_FILE not found in theme, skipping"
	fi

	print_status "Theme '$theme_name' applied successfully!"

	if pgrep waybar >/dev/null; then
		print_status "Restarting waybar to apply changes..."
		pkill waybar
		waybar &
		disown
	fi
}

show_current_theme() {
	print_status "Current theme files:"
	[[ -f "$WAYBAR_CONFIG_DIR/$CONFIG_FILE" ]] && echo "  ✓ $CONFIG_FILE ($(stat -c%y "$WAYBAR_CONFIG_DIR/$CONFIG_FILE" | cut -d' ' -f1,2 | cut -d'.' -f1))"
	[[ -f "$WAYBAR_CONFIG_DIR/$STYLE_FILE" ]] && echo "  ✓ $STYLE_FILE ($(stat -c%y "$WAYBAR_CONFIG_DIR/$STYLE_FILE" | cut -d' ' -f1,2 | cut -d'.' -f1))"

	if [[ ! -f "$WAYBAR_CONFIG_DIR/$CONFIG_FILE" ]] && [[ ! -f "$WAYBAR_CONFIG_DIR/$STYLE_FILE" ]]; then
		print_warning "No theme files found in waybar config directory"
	fi
}

show_usage() {
	echo "Usage: $0 [OPTION] [THEME_NAME]"
	echo ""
	echo "Options:"
	echo "  -l, --list              List available themes"
	echo "  -c, --current           Show current theme info"
	echo "  -a, --apply THEME       Apply specified theme"
	echo "  -h, --help              Show this help message"
	echo ""
	echo "Examples:"
	echo "  $0 --list               # List all available themes"
	echo "  $0 --apply dark-theme   # Apply the 'dark-theme' theme"
	echo "  $0 dark-theme           # Same as above (shorthand)"
	echo ""
	echo "Theme Structure:"
	echo "  ~/.config/waybar/themes/THEME_NAME/"
	echo "  ├── config.jsonc        # Waybar configuration"
	echo "  └── style.css           # Waybar styles"
}

main() {
	if [[ ! -d "$WAYBAR_CONFIG_DIR" ]]; then
		print_error "Waybar config directory not found: $WAYBAR_CONFIG_DIR"
		exit 1
	fi

	if [[ ! -d "$THEMES_DIR" ]]; then
		print_status "Creating themes directory: $THEMES_DIR"
		mkdir -p "$THEMES_DIR"
	fi

	case "${1:-}" in
	-l | --list)
		list_themes
		;;
	-c | --current)
		show_current_theme
		;;
	-a | --apply)
		if [[ -z "${2:-}" ]]; then
			print_error "Theme name required for --apply option"
			show_usage
			exit 1
		fi
		apply_theme "$2"
		;;
	-h | --help)
		show_usage
		;;
	"")
		print_error "No arguments provided"
		show_usage
		exit 1
		;;
	*)
		# Treat as theme name (shorthand for --apply)
		apply_theme "$1"
		;;
	esac
}

# Run main function with all arguments
main "$@"
