# vim:fileencoding=utf-8:foldmethod=marker

#: Fonts {{{

font_family      family="JetBrainsMono Nerd Font Mono"
bold_font        auto
italic_font      auto
bold_italic_font auto

font_size 14.0

force_ltr no

disable_ligatures always

#: The sizes of the lines used for the box drawing Unicode characters.
#: These values are in pts. They will be scaled by the monitor DPI to
#: arrive at a pixel value. There must be four values corresponding to
#: thin, normal, thick, and very thick lines.

box_drawing_scale 0.001, 1, 1.5, 2

#: }}}

#: Cursor customization {{{

cursor_shape block

cursor_beam_thickness 2

cursor_underline_thickness 2.0

cursor_blink_interval -1

cursor_stop_blinking_after 120

#: }}}

#: Scrollback {{{

scrollback_lines 2000

scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER

scrollback_pager_history_size 0

scrollback_fill_enlarged_window no

wheel_scroll_multiplier 5.0

wheel_scroll_min_lines 1

touch_scroll_multiplier 1.0

#: }}}

#: Mouse {{{

mouse_hide_wait 3.0

url_style curly #: can be one of: none, straight, double, curly, dotted, dashed.

open_url_with default

url_prefixes file ftp ftps gemini git gopher http https irc ircs kitty mailto news sftp ssh

detect_urls yes

copy_on_select no

paste_actions quote-urls-at-prompt

strip_trailing_spaces smart

select_by_word_characters @-./_~?&=%+#

click_interval -1.0

focus_follows_mouse no

pointer_shape_when_grabbed arrow

#: The default shape of the mouse pointer. Valid values are: arrow, beam and hand.
default_pointer_shape arrow

pointer_shape_when_dragging arrow


#: Mouse actions {{{

#: Mouse buttons can be mapped to perform arbitrary actions. The
#: syntax is:

#: .. code-block:: none

#:     mouse_map button-name event-type modes action

#: Where button-name is one of left, middle, right, b1 ... b8 with
#: added keyboard modifiers. For example: ctrl+shift+left refers to
#: holding the Ctrl+Shift keys while clicking with the left mouse
#: button. The value b1 ... b8 can be used to refer to up to eight
#: buttons on a mouse.

#: event-type is one of press, release, doublepress, triplepress,
#: click, doubleclick. modes indicates whether the action is performed
#: when the mouse is grabbed by the program running in the terminal,
#: or not. The values are grabbed or ungrabbed or a comma separated
#: combination of them. grabbed refers to when the program running in
#: the terminal has requested mouse events. Note that the click and
#: double click events have a delay of click_interval to disambiguate
#: from double and triple presses.

#: You can run kitty with the kitty --debug-input command line option
#: to see mouse events. See the builtin actions below to get a sense
#: of what is possible.

#: If you want to unmap an action, map it to no_op. For example, to
#: disable opening of URLs with a plain click::

#:     mouse_map left click ungrabbed no_op

#: See all the mappable actions including mouse actions here
#: <https://sw.kovidgoyal.net/kitty/actions/>.

#: .. note::
#:     Once a selection is started, releasing the button that started it will
#:     automatically end it and no release event will be dispatched.

clear_all_mouse_actions no

#: Remove all mouse action definitions up to this point. Useful, for
#: instance, to remove the default mouse actions.

#: Click the link under the mouse or move the cursor

mouse_map left click ungrabbed mouse_handle_click selection link prompt

#::  First check for a selection and if one exists do nothing. Then
#::  check for a link under the mouse cursor and if one exists, click
#::  it. Finally check if the click happened at the current shell
#::  prompt and if so, move the cursor to the click location. Note
#::  that this requires shell integration
#::  <https://sw.kovidgoyal.net/kitty/shell-integration/> to work.

#: Click the link under the mouse or move the cursor even when grabbed

mouse_map shift+left click grabbed,ungrabbed mouse_handle_click selection link prompt

#::  Same as above, except that the action is performed even when the
#::  mouse is grabbed by the program running in the terminal.

#: Click the link under the mouse cursor

mouse_map ctrl+shift+left release grabbed,ungrabbed mouse_handle_click link

#::  Variant with Ctrl+Shift is present because the simple click based
#::  version has an unavoidable delay of click_interval, to
#::  disambiguate clicks from double clicks.

#: Discard press event for link click

mouse_map ctrl+shift+left press grabbed discard_event

#::  Prevent this press event from being sent to the program that has
#::  grabbed the mouse, as the corresponding release event is used to
#::  open a URL.

#: Paste from the primary selection

mouse_map middle release ungrabbed paste_from_selection

#: Start selecting text

mouse_map left press ungrabbed mouse_selection normal

#: Start selecting text in a rectangle

mouse_map ctrl+alt+left press ungrabbed mouse_selection rectangle

#: Select a word

mouse_map left doublepress ungrabbed mouse_selection word

#: Select a line

mouse_map left triplepress ungrabbed mouse_selection line

#: Select line from point

mouse_map ctrl+alt+left triplepress ungrabbed mouse_selection line_from_point

#::  Select from the clicked point to the end of the line.

#: Extend the current selection

mouse_map right press ungrabbed mouse_selection extend

#::  If you want only the end of the selection to be moved instead of
#::  the nearest boundary, use move-end instead of extend.

#: Paste from the primary selection even when grabbed

mouse_map shift+middle release ungrabbed,grabbed paste_selection
mouse_map shift+middle press grabbed discard_event

#: Start selecting text even when grabbed

mouse_map shift+left press ungrabbed,grabbed mouse_selection normal

#: Start selecting text in a rectangle even when grabbed

mouse_map ctrl+shift+alt+left press ungrabbed,grabbed mouse_selection rectangle

#: Select a word even when grabbed

mouse_map shift+left doublepress ungrabbed,grabbed mouse_selection word

#: Select a line even when grabbed

mouse_map shift+left triplepress ungrabbed,grabbed mouse_selection line

#: Select line from point even when grabbed

mouse_map ctrl+shift+alt+left triplepress ungrabbed,grabbed mouse_selection line_from_point

#::  Select from the clicked point to the end of the line even when
#::  grabbed.

#: Extend the current selection even when grabbed

mouse_map shift+right press ungrabbed,grabbed mouse_selection extend

#: Show clicked command output in pager

mouse_map ctrl+shift+right press ungrabbed mouse_show_command_output

#::  Requires shell integration
#::  <https://sw.kovidgoyal.net/kitty/shell-integration/> to work.

#: }}}

#: }}}

#: Performance tuning {{{

repaint_delay 10

input_delay 3

sync_to_monitor yes

#: }}}

#: Terminal bell {{{

enable_audio_bell no

visual_bell_duration 0.0

# visual_bell_color none

window_alert_on_bell yes

bell_on_tab "ïƒ³ "

command_on_bell none

#: Program to run when a bell occurs. The environment variable
#: KITTY_CHILD_CMDLINE can be used to get the program running in the
#: window in which the bell occurred.

bell_path none

#: Path to a sound file to play as the bell sound. If set to none, the
#: system default bell sound is used. Must be in a format supported by
#: the operating systems sound API, such as WAV or OGA on Linux
#: (libcanberra) or AIFF, MP3 or WAV on macOS (NSSound)

#: }}}

#: Window layout {{{

linux_display_server auto
remember_window_size  yes
initial_window_width  640
initial_window_height 400
hide_window_decorations yes
window_logo_path none
confirm_os_window_close 0

#: }}}

#: Color scheme {{{

background_opacity 0.8
background_image none
background_image_layout tiled
background_image_linear no
dynamic_background_opacity yes
background_tint 0.0
dim_opacity 0.75

#: }}}

#: Advanced {{{

shell /sbin/zsh
editor /sbin/nvim
close_on_child_death no
allow_remote_control no
listen_on none
update_check_interval 24
startup_session none
clipboard_control write-clipboard write-primary read-clipboard-ask read-primary-ask
clipboard_max_size 64
allow_hyperlinks yes

shell_integration enabled no-cursor

#: Enable shell integration on supported shells. This enables features
#: such as jumping to previous prompts, browsing the output of the
#: previous command in a pager, etc. on supported shells. Set to
#: disabled to turn off shell integration, completely. It is also
#: possible to disable individual features, set to a space separated
#: list of these values: no-rc, no-cursor, no-title, no-cwd, no-
#: prompt-mark, no-complete. See Shell integration

allow_cloning ask
clone_source_strategies venv,conda,env_var,path
term xterm-kitty

#: }}}

#: Keyboard shortcuts {{{

kitty_mod ctrl+shift
clear_all_shortcuts no

#: Clipboard {{{

map kitty_mod+c copy_to_clipboard
map kitty_mod+v paste_from_clipboard
map kitty_mod+s  paste_from_selection
map kitty_mod+o pass_selection_to_program

#: }}}

#: Scrolling {{{

map kitty_mod+up    scroll_line_up
map kitty_mod+k     scroll_line_up
map kitty_mod+down    scroll_line_down
map kitty_mod+j       scroll_line_down
map kitty_mod+page_up scroll_page_up
map kitty_mod+page_down scroll_page_down
map kitty_mod+home scroll_home
map kitty_mod+end scroll_end

map kitty_mod+h show_scrollback
map kitty_mod+g show_last_command_output

#: }}}

#: Font sizes {{{

map kitty_mod+equal  change_font_size all +2.0
map kitty_mod+plus   change_font_size all +2.0
map kitty_mod+kp_add change_font_size all +2.0
map kitty_mod+minus       change_font_size all -2.0
map kitty_mod+kp_subtract change_font_size all -2.0
map kitty_mod+backspace change_font_size all 0
map kitty_mod+e open_url_with_hints
map kitty_mod+p>y kitten hints --type hyperlink

#: }}}

#: Miscellaneous {{{

map kitty_mod+u    kitten unicode_input
map kitty_mod+f2 edit_config_file
map kitty_mod+escape kitty_shell window

# Change opacity
map kitty_mod+a>m set_background_opacity 1
map kitty_mod+a>l set_background_opacity 0.6

#: Reset the terminal

map kitty_mod+delete clear_terminal reset active

#: Reload kitty.conf

map kitty_mod+f5 load_config_file

#: Debug kitty configuration

map kitty_mod+f6 debug_config

#: }}}

#: }}}

include theme.conf
